package net.shagie.studentnotify.rules

import net.shagie.studentnotify.data.Student
import net.shagie.studentnotify.data.Semester
import net.shagie.studentnotify.data.Grade
import java.util.List

global java.util.List notifications;

function Semester lastSemester(List sem) {
    return (Semester)sem.get(sem.size() - 1);
}

rule "straight As"
    when
        $s : Student(grades != null, !grades.empty)
        List(size == $s.grades.size()) from collect
            (Semester(reading == Grade.A, writing == Grade.A, math == Grade.A) from $s.grades)
    then
        System.out.println($s.getId() + ": Straight As");
        notifications.add("allAs");
end

rule "last Semester all As"
    when
        $s : Student(getGrades() != null)
        $y : lastSemester($s.grades)
    then
        System.out.println($s.getId() + ": last semester As: ");
        notifications.add("lastSem");
end

rule "enrolled"
    when
        $s : Student()
    then
        notifications.add("enrolled " + $s.getName());
end

rule "last semester"
    when
        $s : Student(getGrades() != null)
    then
        notifications.add("there: " + $s.getGrades().get($s.getGrades().size() - 1));

end