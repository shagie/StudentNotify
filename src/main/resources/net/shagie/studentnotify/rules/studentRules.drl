package net.shagie.studentnotify.rules

import net.shagie.studentnotify.data.Student
import net.shagie.studentnotify.data.Semester
import java.util.*

global java.util.List notifications;

dialect "mvel"

////////////

rule "straight As1"
    when
        $s : Student(
            grades != null,
            $g : grades
        )
        forall(
            Semester(reading == "A", writing == "A", math == "A") from $g
        )
    then
        System.out.println($s.getId() + ": s all As1: " + $s);
        System.out.println($s.getId() + ": g all As1: " + $g);
        notifications.add("allAs1");
end


rule "straight As2"
    when
        $s : Student(
            grades != null,
            $g : grades
        )
        $a : List(size() == $g.size) from
            collect (Semester(reading == "A", writing == "A", math == "A") from $g)
    then
        System.out.println($s.getId() + ": s all As2: " + $s);
        System.out.println($s.getId() + ": g all As2: " + $g);
        notifications.add("allAs2");
end

rule "straight As3"
    when
        $s : Student(
            grades != null,
            $g : grades
        )
        not Semester(reading != "A" || writing != "A" || math != "A") from $g
    then
        System.out.println($s.getId() + ": s all As3: " + $s);
        System.out.println($s.getId() + ": g all As3: " + $g);
        notifications.add("allAs3");
end

////////////

//rule "enrolled"
//    when
//        $s : Student()
//    then
//        notifications.add("enrolled " + $s.getName());
//end


////////////


//rule "last semester"
//    when
//        $s : Student(
//            grades != null,
//            $g : grades,
//            $l : grades.get(grades.size() - 1)
//        )
//    then
//        System.out.println($s.getId() + ": last semester " + $l);
//        notifications.add("last semester: " + $l);
//end